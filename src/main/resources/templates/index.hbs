<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Chess Game</title>
    <link rel="stylesheet" href="/src/index.css">
</head>

<body>
    <div id="app">
        <h1>♟️ 체스</h1>
        <div class="form start">
            <form id="create-form" action="/game" method="post">
                <label for="title">방 제목</label>
                <input type="text" id="title" name="title">
                <label for="password">비밀번호</label>
                <input type="password" id="password" name="password">
                <button id="create-button">방 생성</button>
            </form>
        </div>
        <div class="room-list">
            <table id="room-table">
            </table>
        </div>
    </div>
</body>
<script type="text/javascript">
    function deleteRoom(id) {
        const passwordInput = window.prompt('방을 삭제하려면 비밀번호를 입력하세요');
        fetch('./game/' + id, {
                method: 'DELETE',
                body: passwordInput
            }).then((response) => response.json())
            .catch((error) => window.alert("서버 문제로 삭제하지 못했습니다."))
            .then((data) =>  window.alert(data.message))
            .then(() => loadGames());
    }

    function loadGames() {
        fetch('./games')
            .then((response) => {
                if (response.status != 200) {
                    throw new Error('서버 문제로 방 목록을 불러올 수 없습니다.');
                }
                return response.json();
            })
            .then((games) => initializeRoomList(games))
            .catch((error) => window.alert(error.message));
    }

    function initializeRoomList(games) {
        const table = document.getElementById("room-table");
        table.innerHTML = "";
        games.forEach(game => table.appendChild(createGameTr(game)));
    }

    function createGameTr(game) {
        const tr = document.createElement('tr');
        tr.appendChild(createTitleTd(game));
        tr.appendChild(createDeleteTd(game));
        return tr;
    }

    function createTitleTd(game) {
        const td = document.createElement('td');
        const a = document.createElement('a');
        a.setAttribute('href', './game/' + game.no);
        a.setAttribute('class', 'room-title');
        a.innerHTML = game.title;
        td.appendChild(a);
        return td;
    }

    function createDeleteTd(game) {
        const td = document.createElement('td');
        const button = document.createElement('button');
        button.setAttribute('onclick', 'deleteRoom(' + game.no + ')');
        button.innerHTML = '삭제';
        td.appendChild(button);
        return td;
    }

    document.forms['create-form'].addEventListener('submit', (event) => {
        event.preventDefault();
        fetch(event.target.action, {
            method: 'POST',
            body: new URLSearchParams(new FormData(event.target))
            }).then((response) => response.json())
              .catch((error) => window.alert("서버 문제로 생성하지 못했습니다."))
              .then((data) =>  window.alert(data.message))
              .then(() => loadGames());
    });

    window.onload = function() {
        loadGames();
    }
</script>
</html>
